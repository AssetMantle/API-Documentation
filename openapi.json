{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "AssetMantle",
        "termsOfService": "https://assetmantle.one",
        "contact": {
            "email": "hello@assetmantle.one"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "x-logo": {
            "url": "https://assetmantle.one"
        },
        "description": "# Introduction\nAssetMantle is a multi-tenant NFT marketplace framework that enables creators and collectors to securely mint, own, and trade digital assets on its fast-finality blockchain."
    },
    "tags": [
        {
            "name": "RPC",
            "description": "RPC Endpoint : https://rpc.assetmantle.one/"
        },
        {
            "name": "REST",
            "description": "REST Endpoint : https://rest.assetmantle.one/"
        },
        {
            "name": "GPRC",
            "description": "GPRC Endpoint : grpc://grpc.assetmantle.one"
        },
        {
            "name": "WSS",
            "description": "WSS Endpoint : wss://wss.assetmantle.one"
        },
        {
            "name": "REST Endpoints",
            "description": "Follow Rest Endpoints here: https://github.com/AssetMantle/awesome-AssetMantle"
        },
        {
            "name": "Important Info",
            "description": "Mainnet: 118, DevNet: 750"
        },
        {
            "name": "REST Endpoints examples",
            "description": "URL: https://rest.assetmantle.one/txs/<txhash>",
            "response": "https://rest.assetmantle.one/txs/855C79BEBAA24FC983F24AFE2C2356B1F05D9125F53A9629F45907EBBD4D33E2",
            "address": "https://rest.assetmantle.one/bank/balances/<address>",
            "response2": "https://rest.assetmantle.one/bank/balances/mantle1907n5d2xwy3av597y6347dsc2ktpl2d9u0j4tu"
        }
    ],
    "paths": {
        "blocks/latest": {
            "get": {
                "tags": [
                    "REST"
                ],
                "summary": "Get the latest blocks",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                }
            }
        },
        "blocks/{height}": {
            "get": {
                "tags": [
                    "REST"
                ],
                "summary": "Get a block at a certain height",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "description": "height of block to get info on",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                }
            }
        },
        "validatorsets/latest": {
            "get": {
                "tags": [
                    "REST"
                ],
                "summary": "Get the latest validator set",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Validator Set not found"
                    }
                }
            }
        },
        "validatorsets/{height}": {
            "get": {
                "tags": [
                    "REST"
                ],
                "summary": "Get the validator set at certain height",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "description": "height of validator set to get info on",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Validator Set not found"
                    }
                }
            }
        },
        "cosmos/tx/v1beta1/txs/{hash}": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Transaction not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get a transaction by hash",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash of the transaction to get info on",
                        "required": true
                    }
                ],
                "responses": null
            }
        },
        "bank/total": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get total supply of coins in a chain",
                "responses": null
            }
        },
        "bank/total/{coin}": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get total supply of a particular coin in a chain",
                "parameters": [
                    {
                        "name": "coin",
                        "in": "path",
                        "description": "Coin to get total supply of",
                        "required": true
                    }
                ],
                "responses": null
            }
        },
        "bank/balances/{address}": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get the account balances",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Address to get balance of",
                        "required": true
                    }
                ],
                "responses": null
            }
        },
        "auth/accounts/{address}": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get the account information on blockchain",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Address to get information of",
                        "required": true
                    }
                ],
                "responses": null
            }
        },
        "staking/delegators/{delegatorAddr}/delegations": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Get all delegations from a delegator",
                "parameters": [
                    {
                        "name": "delegatorAddr",
                        "in": "path",
                        "description": "Address of delegator to get delegations of",
                        "required": true
                    }
                ],
                "responses": null
            }
        },
        "staking/delegators/{delegatorAddr}/delegations/{validatorAddr}": {
            "get": {
                "200": {
                    "description": "successful operation"
                },
                "400": {
                    "description": "Bad Request"
                },
                "404": {
                    "description": "Not found"
                },
                "tags": [
                    "REST"
                ],
                "summary": "Query the current delegation between a delegator and a validator",
                "parameters": [
                    {
                        "name": "delegatorAddr",
                        "in": "path",
                        "description": "Address of delegator to get delegation of",
                        "required": true
                    },
                    {
                        "name": "validatorAddr",
                        "in": "path",
                        "description": "Address of validator that has been delegated",
                        "required": true
                    }
                ],
                "responses": null
            },
            "staking/delegators/{delegatorAddr}/unbonding_delegators": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get all unbonding delegations from a delegator",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of delegator to get delegation of",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/delegators/{delegatorAddr}/unbonding_delegators/{validatorAddr}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query all unbonding delegations between a delegator and a validator",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of delegator to get unbonded delegations of",
                            "required": true
                        },
                        {
                            "name": "validatorAddr",
                            "description": "Address of validator that has been unbonded",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/redelegations": {
                "get": {
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get all redelegations",
                    "parameters": [
                        {
                            "name": "delegator",
                            "in": "query",
                            "description": "Address of delegator that redelegated",
                            "required": true
                        },
                        {
                            "name": "validator_from",
                            "in": "query",
                            "description": "Address of validator who was previously delegated",
                            "required": true
                        },
                        {
                            "name": "validator_to",
                            "in": "query",
                            "description": "Address of validator who is presently delegated",
                            "required": true
                        }
                    ]
                }
            },
            "staking/delegators/{delegatorAddr}/validators": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query all validators that a delegator is bonded to",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of delegator to get bonded validators of",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/delegators/{delegatorAddr}/validators/{validatorAddr}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query a validator that a delegator is bonded to",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of delegator to get bonded validator of",
                            "required": true
                        },
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of validator to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/validators": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get all validator candidates. By default returns only bonded validators",
                    "parameters": [
                        {
                            "name": "status",
                            "in": "query",
                            "description": "The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'.",
                            "required": true
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Page Number",
                            "required": true
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of items on the page",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/validators/{validatorAddr}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query the information from a single validator",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of validator to get information of",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/validators/{validatorAddr}/delegations": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get all delegations from a validator",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of validator to get delegations from",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/validators/{validatorAddr}/unbonding_delegations": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get all unbonding delegations from a validator",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "description": "Address of validator to get unbonding delegations of",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "staking/pool": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get the current stake of the staking pool",
                    "responses": null
                }
            },
            "staking/parameters": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get the current staking parameter values",
                    "responses": null
                }
            },
            "slashing/signing_infos": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get sign info of all validators",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Page Number",
                            "required": true
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of items per page",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "slashing/parameters": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get the current slashing parameters",
                    "responses": null
                }
            },
            "gov/proposals": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query proposals",
                    "parameters": [
                        {
                            "name": "voter",
                            "in": "query",
                            "description": "voter address",
                            "required": true
                        },
                        {
                            "name": "depositor",
                            "in": "query",
                            "description": "depositor address",
                            "required": true
                        },
                        {
                            "name": "status",
                            "in": "query",
                            "description": "proposal status, valid values can be \"deposit_period\", \"voting_period\", \"passed\", \"rejected\"",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query a particular proposal",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/proposer": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query proposer",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/deposits": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query deposits",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/deposits/{depositor}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query deposit",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        },
                        {
                            "name": "depositor",
                            "in": "path",
                            "description": "ID of depositor",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/votes": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query Voters information by proposal ID",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/votes/{voter}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query Vote information by proposal ID and voter address",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        },
                        {
                            "name": "voter",
                            "in": "path",
                            "description": "Voter address",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/proposals{proposalId}/tally": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get a proposals tally result at current time",
                    "parameters": [
                        {
                            "name": "proposalId",
                            "in": "path",
                            "description": "ID of proposal to be queried",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "gov/parameters/deposit": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query governance deposit parameters",
                    "responses": null
                }
            },
            "gov/parameters/tallying": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query governance deposit parameters",
                    "responses": null
                }
            },
            "gov/parameters/voting": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query governance voting parameters",
                    "responses": null
                }
            },
            "distribution/delegators/{delegatorAddr}/rewards": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get the sum of all the rewards earned by delegations by a single delegator",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of Delegator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query a single delegation reward by a delegator",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of Delegator",
                            "required": true
                        },
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of Validator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "distribution/delegators/{delegatorAddr}/withdraw_address": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Get the delegations rewards withdrawal address",
                    "parameters": [
                        {
                            "name": "delegatorAddr",
                            "in": "path",
                            "description": "Address of Delegator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "/distribution/validators/{validatorAddr}": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query the distribution information of a single validator",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of Validator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "/distribution/validators/{validatorAddr}/outstanding_rewards": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Fee distribution outsdtanding rewards of a single validator",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of Validator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "/distribution/validators/{validatorAddr}/rewards": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Query the commission and self-delegation rewards of validator.",
                    "parameters": [
                        {
                            "name": "validatorAddr",
                            "in": "path",
                            "description": "Address of Validator",
                            "required": true
                        }
                    ],
                    "responses": null
                }
            },
            "/distribution/validators/community_pool": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Commmunity Pool Parameters",
                    "responses": null
                }
            },
            "/distribution/validators/parameters": {
                "get": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "tags": [
                        "REST"
                    ],
                    "summary": "Fee division parameters",
                    "responses": null
                }
            }
        }
    }
}